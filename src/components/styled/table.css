
.table {
    @apply text-left;
    border-radius: var(--rounded-table, 0.25em);
    &, &--divide {
        --tr-bg: var(--b2);
        --tr-bg-h: var(--b2);
    }
    &--strips {
        --tr-bg: var(--b2);
        --tr-bg-h: var(--b3);
    }
}

:where(.table) th, td {
    @apply whitespace-nowrap;
    padding: inherit;
}

:where(.table) :where(thead,tbody,tfoot,tr) {
    border-radius: inherit;
    padding: inherit;
}

:where(.table.table--compact) {
    font-size: 0.8rem;
    padding: 0.5em;
}

:where(.table:not(.table--compact)) {
    padding: 1em;
}

:where(.table.table--divide:not(.table--strips)) :where(tr:not(:last-child)) {
    @apply border-b border-base-2;
}

:where(.table.table--divide:not(.table--strips)) :where(thead) :where(tr) {
    @apply border-b border-base-3;
}

:where(.table) :where(thead, tfoot) tr th {
    @apply font-medium capitalize;
    font-size: 0.8rem;
}
:where(.table.table--compact) :where(thead, tfoot) tr th {
    font-size: 0.7rem;
}

:where(.table.table--strips) :where(thead, tfoot) tr {
    @apply bg-base-3;
}

:where(.table) :where(thead, tfoot) th, td {
    &:first-child {
        border-top-left-radius: inherit;
        border-bottom-left-radius: inherit;
    }
    &:last-child {
        border-top-right-radius: inherit;
        border-bottom-right-radius: inherit;
    }
}

:where(.table.table--strips) :where(tbody) tr:nth-child(even) {
    --tw-bg-opacity: 1;
    background-color: hsla(var(--tr-bg) / var(--tw-bg-opacity));
}

:where(.table.table--hover) :where(tbody) tr:hover {
    --tw-bg-opacity: 1;
    background-color: hsla(var(--tr-bg-h) / var(--tw-bg-opacity));
}

:where(.table.table--strips) :where(tbody) :where(tr:nth-child(even)) th, td {
    &:first-child {
        border-top-left-radius: inherit;
        border-bottom-left-radius: inherit;
    }
    &:last-child {
        border-bottom-right-radius: inherit;
        border-top-right-radius: inherit;
    }
}
